version=pmwiki-1.0.11
newline=²
text=!Transformation des Ausgangsmaterials²!!Indices²²Für jede Suchart wird ein Index angelgt. Für die Autorensuche via Mausklick wird ausserdem ein Autorenverzeichnis erzeugt. Selbes gilt für die Schlagwortsuche via Mausklick.²²Die Erzeugung der Indices erfolgt grundsätzlich in zwei Stufen. ²# Zunächst wird durch einen Bibb/AntBuildLauf (BuildAutorenIndex, BuildSchlagwortIndex) aus dem {{Projects/Katalog}} bzw. durch ein Shellscript (BuildVolltextIndex) aus den PDF-Dateien für jeden Index eine Indexdatei ezeugt, die dann ²# durch Shellscripte (ScriptVolltextIndex, ScriptSchlagwortIndex, ScriptAutorenIndex) in XML - Dateien umgewandelt wird.²- Die Shellscripte können auch über Ant-Targets angesprochen werden²²²* Bibb/VolltextIndex²* Bibb/SchlagwortIndex²* Bibb/AutorenIndex²²----²[[Projects/DokuSuchmaschine index]]
time=1102028411
diff:1098297467:1098297467:=1,75c1²< !Transformation des Ausgangsmaterials²< !!Indices²< ²< Für jede Suchart wird ein Index angelgt. Für die Autorensuche via Mausklick wird ausserdem ein Autorenverzeichnis erzeugt.²< ²< !!!Volltextindex²< ²< Der Erstellungsprozess ist in zwei Phasen unterteilt.²< ²< '''1) Indizierung'''²< ²< In der ersten Phase werden die Artikel-PDF-Dateien in mehreren Schritten in IDX-Dateien verwandelt. IDX-Dateien sind Text-Dateien, in denen im CSV-Format abgespeichert wird, welches Wort wie oft in welchem Artikel vorkommt. Für jeden Anfangsbuchstaben gibt es eine IDX-Datei. Die Zeilen in jeder Datei sind alphabetisch nach den Wörtern sortiert.²< ²< Beispiel: a.xml²< ²<  ...²< ²<  arbeit;2;bwp-h1-54ff.pdf²< ²<  arbeit;1;bwp-h6-02ff.pdf²< ²<  arbeitsamt;1;bwp-h3-01ff.pdf²< ²<  ....²< ²< Diese Transfromation werden von OpenSource-Linux-Applikationen, bash-Shellscripten und awk-Scripten durchgeführt.²< ²<  -- .../bibb/bin/register.sh: Das Hauptscript, das die Applikationen startet und weitere Scripte nachläd.²< ²<  -- .../bibb/bin/pdftotext: Applikation, die PDF-Dateien in Text-Dateinen konvertiert²< ²<  -- .../bibb/bin/wf: Applikation, die zählt, wie oft welches Wort in einer Datei vorkommt²< ²<  -- .../bibb/bin/wordindex.sh: Hilfsscript, das die Verteilung in die Anfangsbuchstaben.IDX-Dateien vornimmt²< ²<  -- .../bibb/bin/wordindex.awk: Hilfsscript zur Formatierung²< ²<  ==> .../bibb/idx/volltext/[a-z].idx²< ²< '''2) XML - Transformation'''²< ²< In der zweiten Phase werden die IDX-Dateien in XML-Dateien transformiert. Zuständig dafür sind ein bash-Shellscript und ein awk-Script.²< ²<  -- .../bibb/bin/idx2xml.sh: Übernimmt die Steuerung der Transformation. Erster Parameter muss “volltext” sein.²< ²<  -- .../bibb/bin/idx2xml.awk: Nimmt die XML-Formatierung vor²< ²<  ==> .../bibb/xml/index/volltext/[a-z].xml²< ²< !!!Schlagwortindex²< ²< Auch der Schlagwortindex wird in zwei Phasen durchgeführt, die prinzipiell den Phasen der Volltextindex-Erzeugung entsprechen.²< ²< '''1) Indizierung'''²< ²< Als Ausgangsmaterial für die erste Phase dient der Katalog.²< ²<  -- .../bibb/xml/katalog/katalog.xml²< ²< Daraus wird via XSLT eine Schlagwort-IDX-Datei hergestellt²< ²<  -- .../bibb/xsl/schlagwort.xsl²< ²<  ==> .../bibb/idx/schlagwort/schlagwort.idx²< ²< Exakt wie beim VolltextIndex werden daraus dann die einzelnen IDX-Dateien hergestellt.²< ²<  -- .../bibb/bin/wordindex.sh: Hilfsscript, das die Verteilung in die Anfangsbuchstaben.IDX-Dateien vornimmt²< ²<  -- .../bibb/bin/wordindex.awk: Hilfsscript zur Formatierung²< ²<  ==> .../bibb/idx/schlagwort/[a-z].idx²< ²< ----²< [[Projects/DokuSuchmaschine index]]²\ No newline at end of file²---²> Describe {{Indices}} here.²\ No newline at end of file²
author=
author:1098297467=
host:1098297467=217.225.7.54
name=Projects.Indices
host=194.231.187.147
agent=Mozilla/5.0 (X11; U; Linux i686; de-DE; rv:1.7.5) Gecko/20041108 Firefox/1.0
rev=12
diff:1098354243:1098297467:=4c4²< Für jede Suchart wird ein Index angelgt. Für die Autorensuche via Mausklick wird ausserdem ein Autorenverzeichnis erzeugt. Selbes gilt für die Schlagwortsuche via Mausklick²---²> Für jede Suchart wird ein Index angelgt. Für die Autorensuche via Mausklick wird ausserdem ein Autorenverzeichnis erzeugt.²6c6²< * Bibb/VolltextIndex²---²> !!!Volltextindex²7a8²> Der Erstellungsprozess ist in zwei Phasen unterteilt.²8a10²> '''1) Indizierung'''²10c12²< !!!Volltextindex²---²> In der ersten Phase werden die Artikel-PDF-Dateien in mehreren Schritten in IDX-Dateien verwandelt. IDX-Dateien sind Text-Dateien, in denen im CSV-Format abgespeichert wird, welches Wort wie oft in welchem Artikel vorkommt. Für jeden Anfangsbuchstaben gibt es eine IDX-Datei. Die Zeilen in jeder Datei sind alphabetisch nach den Wörtern sortiert.²12c14²< Der Erstellungsprozess ist in zwei Phasen unterteilt.²---²> Beispiel: a.xml²14c16²< '''1) Indizierung'''²---²>  ...²16c18²< In der ersten Phase werden die Artikel-PDF-Dateien in mehreren Schritten in IDX-Dateien verwandelt. IDX-Dateien sind Text-Dateien, in denen im CSV-Format abgespeichert wird, welches Wort wie oft in welchem Artikel vorkommt. Für jeden Anfangsbuchstaben gibt es eine IDX-Datei. Die Zeilen in jeder Datei sind alphabetisch nach den Wörtern sortiert.²---²>  arbeit;2;bwp-h1-54ff.pdf²18c20²< Beispiel: a.xml²---²>  arbeit;1;bwp-h6-02ff.pdf²20c22²<  ...²---²>  arbeitsamt;1;bwp-h3-01ff.pdf²22c24²<  arbeit;2;bwp-h1-54ff.pdf²---²>  ....²24c26²<  arbeit;1;bwp-h6-02ff.pdf²---²> Diese Transfromation werden von OpenSource-Linux-Applikationen, bash-Shellscripten und awk-Scripten durchgeführt.²26c28²<  arbeitsamt;1;bwp-h3-01ff.pdf²---²>  -- .../bibb/bin/register.sh: Das Hauptscript, das die Applikationen startet und weitere Scripte nachläd.²28c30²<  ....²---²>  -- .../bibb/bin/pdftotext: Applikation, die PDF-Dateien in Text-Dateinen konvertiert²30c32²< Diese Transfromation werden von OpenSource-Linux-Applikationen, bash-Shellscripten und awk-Scripten durchgeführt.²---²>  -- .../bibb/bin/wf: Applikation, die zählt, wie oft welches Wort in einer Datei vorkommt²32c34²<  -- .../bibb/bin/register.sh: Das Hauptscript, das die Applikationen startet und weitere Scripte nachläd.²---²>  -- .../bibb/bin/wordindex.sh: Hilfsscript, das die Verteilung in die Anfangsbuchstaben.IDX-Dateien vornimmt²34c36²<  -- .../bibb/bin/pdftotext: Applikation, die PDF-Dateien in Text-Dateinen konvertiert²---²>  -- .../bibb/bin/wordindex.awk: Hilfsscript zur Formatierung²36c38²<  -- .../bibb/bin/wf: Applikation, die zählt, wie oft welches Wort in einer Datei vorkommt²---²>  ==> .../bibb/idx/volltext/[a-z].idx²38c40²<  -- .../bibb/bin/wordindex.sh: Hilfsscript, das die Verteilung in die Anfangsbuchstaben.IDX-Dateien vornimmt²---²> '''2) XML - Transformation'''²40c42²<  -- .../bibb/bin/wordindex.awk: Hilfsscript zur Formatierung²---²> In der zweiten Phase werden die IDX-Dateien in XML-Dateien transformiert. Zuständig dafür sind ein bash-Shellscript und ein awk-Script.²42c44²<  ==> .../bibb/idx/volltext/[a-z].idx²---²>  -- .../bibb/bin/idx2xml.sh: Übernimmt die Steuerung der Transformation. Erster Parameter muss “volltext” sein.²44c46²< '''2) XML - Transformation'''²---²>  -- .../bibb/bin/idx2xml.awk: Nimmt die XML-Formatierung vor²46c48²< In der zweiten Phase werden die IDX-Dateien in XML-Dateien transformiert. Zuständig dafür sind ein bash-Shellscript und ein awk-Script.²---²>  ==> .../bibb/xml/index/volltext/[a-z].xml²48c50²<  -- .../bibb/bin/idx2xml.sh: Übernimmt die Steuerung der Transformation. Erster Parameter muss “volltext” sein.²---²> !!!Schlagwortindex²50c52²<  -- .../bibb/bin/idx2xml.awk: Nimmt die XML-Formatierung vor²---²> Auch der Schlagwortindex wird in zwei Phasen durchgeführt, die prinzipiell den Phasen der Volltextindex-Erzeugung entsprechen.²52c54²<  ==> .../bibb/xml/index/volltext/[a-z].xml²---²> '''1) Indizierung'''²54c56²< !!!Schlagwortindex²---²> Als Ausgangsmaterial für die erste Phase dient der Katalog.²56c58²< Auch der Schlagwortindex wird in zwei Phasen durchgeführt, die prinzipiell den Phasen der Volltextindex-Erzeugung entsprechen.²---²>  -- .../bibb/xml/katalog/katalog.xml²58c60²< '''1) Indizierung'''²---²> Daraus wird via XSLT eine Schlagwort-IDX-Datei hergestellt²60c62²< Als Ausgangsmaterial für die erste Phase dient der Katalog.²---²>  -- .../bibb/xsl/schlagwort.xsl²62c64²<  -- .../bibb/xml/katalog/katalog.xml²---²>  ==> .../bibb/idx/schlagwort/schlagwort.idx²64c66²< Daraus wird via XSLT eine Schlagwort-IDX-Datei hergestellt²---²> Exakt wie beim VolltextIndex werden daraus dann die einzelnen IDX-Dateien hergestellt.²66c68²<  -- .../bibb/xsl/schlagwort.xsl²---²>  -- .../bibb/bin/wordindex.sh: Hilfsscript, das die Verteilung in die Anfangsbuchstaben.IDX-Dateien vornimmt²68c70²<  ==> .../bibb/idx/schlagwort/schlagwort.idx²---²>  -- .../bibb/bin/wordindex.awk: Hilfsscript zur Formatierung²70c72²< Exakt wie beim VolltextIndex werden daraus dann die einzelnen IDX-Dateien hergestellt.²---²>  ==> .../bibb/idx/schlagwort/[a-z].idx²72,79c74,75²<  -- .../bibb/bin/wordindex.sh: Hilfsscript, das die Verteilung in die Anfangsbuchstaben.IDX-Dateien vornimmt²< ²<  -- .../bibb/bin/wordindex.awk: Hilfsscript zur Formatierung²< ²<  ==> .../bibb/idx/schlagwort/[a-z].idx²< ²< ----²< [[Projects/DokuSuchmaschine index]]²\ No newline at end of file²---²> ----²> [[Projects/DokuSuchmaschine index]]²\ No newline at end of file²
author:1098354243=
host:1098354243=217.230.190.190
diff:1098354344:1098354243:=7,8d6²< * Bibb/SchlagwortIndex²< * Bibb/AutorenIndex²12c10²< !!!Schlagwortindex²---²> !!!Volltextindex²14c12²< Auch der Schlagwortindex wird in zwei Phasen durchgeführt, die prinzipiell den Phasen der Volltextindex-Erzeugung entsprechen.²---²> Der Erstellungsprozess ist in zwei Phasen unterteilt.²18c16²< Als Ausgangsmaterial für die erste Phase dient der Katalog.²---²> In der ersten Phase werden die Artikel-PDF-Dateien in mehreren Schritten in IDX-Dateien verwandelt. IDX-Dateien sind Text-Dateien, in denen im CSV-Format abgespeichert wird, welches Wort wie oft in welchem Artikel vorkommt. Für jeden Anfangsbuchstaben gibt es eine IDX-Datei. Die Zeilen in jeder Datei sind alphabetisch nach den Wörtern sortiert.²20c18²<  -- .../bibb/xml/katalog/katalog.xml²---²> Beispiel: a.xml²22c20²< Daraus wird via XSLT eine Schlagwort-IDX-Datei hergestellt²---²>  ...²24c22²<  -- .../bibb/xsl/schlagwort.xsl²---²>  arbeit;2;bwp-h1-54ff.pdf²26c24²<  ==> .../bibb/idx/schlagwort/schlagwort.idx²---²>  arbeit;1;bwp-h6-02ff.pdf²28c26²< Exakt wie beim VolltextIndex werden daraus dann die einzelnen IDX-Dateien hergestellt.²---²>  arbeitsamt;1;bwp-h3-01ff.pdf²30c28²<  -- .../bibb/bin/wordindex.sh: Hilfsscript, das die Verteilung in die Anfangsbuchstaben.IDX-Dateien vornimmt²---²>  ....²32c30²<  -- .../bibb/bin/wordindex.awk: Hilfsscript zur Formatierung²---²> Diese Transfromation werden von OpenSource-Linux-Applikationen, bash-Shellscripten und awk-Scripten durchgeführt.²34c32²<  ==> .../bibb/idx/schlagwort/[a-z].idx²---²>  -- .../bibb/bin/register.sh: Das Hauptscript, das die Applikationen startet und weitere Scripte nachläd.²36,37c34,79²< ----²< [[Projects/DokuSuchmaschine index]]²\ No newline at end of file²---²>  -- .../bibb/bin/pdftotext: Applikation, die PDF-Dateien in Text-Dateinen konvertiert²> ²>  -- .../bibb/bin/wf: Applikation, die zählt, wie oft welches Wort in einer Datei vorkommt²> ²>  -- .../bibb/bin/wordindex.sh: Hilfsscript, das die Verteilung in die Anfangsbuchstaben.IDX-Dateien vornimmt²> ²>  -- .../bibb/bin/wordindex.awk: Hilfsscript zur Formatierung²> ²>  ==> .../bibb/idx/volltext/[a-z].idx²> ²> '''2) XML - Transformation'''²> ²> In der zweiten Phase werden die IDX-Dateien in XML-Dateien transformiert. Zuständig dafür sind ein bash-Shellscript und ein awk-Script.²> ²>  -- .../bibb/bin/idx2xml.sh: Übernimmt die Steuerung der Transformation. Erster Parameter muss “volltext” sein.²> ²>  -- .../bibb/bin/idx2xml.awk: Nimmt die XML-Formatierung vor²> ²>  ==> .../bibb/xml/index/volltext/[a-z].xml²> ²> !!!Schlagwortindex²> ²> Auch der Schlagwortindex wird in zwei Phasen durchgeführt, die prinzipiell den Phasen der Volltextindex-Erzeugung entsprechen.²> ²> '''1) Indizierung'''²> ²> Als Ausgangsmaterial für die erste Phase dient der Katalog.²> ²>  -- .../bibb/xml/katalog/katalog.xml²> ²> Daraus wird via XSLT eine Schlagwort-IDX-Datei hergestellt²> ²>  -- .../bibb/xsl/schlagwort.xsl²> ²>  ==> .../bibb/idx/schlagwort/schlagwort.idx²> ²> Exakt wie beim VolltextIndex werden daraus dann die einzelnen IDX-Dateien hergestellt.²> ²>  -- .../bibb/bin/wordindex.sh: Hilfsscript, das die Verteilung in die Anfangsbuchstaben.IDX-Dateien vornimmt²> ²>  -- .../bibb/bin/wordindex.awk: Hilfsscript zur Formatierung²> ²>  ==> .../bibb/idx/schlagwort/[a-z].idx²> ²> ----²> [[Projects/DokuSuchmaschine index]]²\ No newline at end of file²
author:1098354344=
host:1098354344=217.230.190.190
diff:1098354427:1098354344:=10,11c10,37²< ----²< [[Projects/DokuSuchmaschine index]]²\ No newline at end of file²---²> ²> ²> !!!Schlagwortindex²> ²> Auch der Schlagwortindex wird in zwei Phasen durchgeführt, die prinzipiell den Phasen der Volltextindex-Erzeugung entsprechen.²> ²> '''1) Indizierung'''²> ²> Als Ausgangsmaterial für die erste Phase dient der Katalog.²> ²>  -- .../bibb/xml/katalog/katalog.xml²> ²> Daraus wird via XSLT eine Schlagwort-IDX-Datei hergestellt²> ²>  -- .../bibb/xsl/schlagwort.xsl²> ²>  ==> .../bibb/idx/schlagwort/schlagwort.idx²> ²> Exakt wie beim VolltextIndex werden daraus dann die einzelnen IDX-Dateien hergestellt.²> ²>  -- .../bibb/bin/wordindex.sh: Hilfsscript, das die Verteilung in die Anfangsbuchstaben.IDX-Dateien vornimmt²> ²>  -- .../bibb/bin/wordindex.awk: Hilfsscript zur Formatierung²> ²>  ==> .../bibb/idx/schlagwort/[a-z].idx²> ²> ----²> [[Projects/DokuSuchmaschine index]]²\ No newline at end of file²
author:1098354427=
host:1098354427=217.230.190.190
diff:1098356038:1098354427:=4c4²< Für jede Suchart wird ein Index angelgt. Für die Autorensuche via Mausklick wird ausserdem ein Autorenverzeichnis erzeugt. Selbes gilt für die Schlagwortsuche via Mausklick.²---²> Für jede Suchart wird ein Index angelgt. Für die Autorensuche via Mausklick wird ausserdem ein Autorenverzeichnis erzeugt. Selbes gilt für die Schlagwortsuche via Mausklick²6,8d5²< Die Erzeugung der Indices erfolgt grundsätzlich in zwei Stufen. Zunächst wird durch einen AntBuildLauf (BuildAutorenIndex, BuildSchlagwoerIndex) bzw. ein Shellscript (BuildVolltextIndex) für jeden Index eine Indexdatei ezeugt, die dann in XML - Dateien umgewandelt wird²< ²< ²
author:1098356038=
host:1098356038=217.230.190.190
diff:1098357660:1098356038:=6c6²< Die Erzeugung der Indices erfolgt grundsätzlich in zwei Stufen. Zunächst wird durch einen AntBuildLauf (BuildAutorenIndex, BuildSchlagwortIndex) bzw. ein Shellscript (BuildVolltextIndex) für jeden Index eine Indexdatei ezeugt, die dann durch Shellscripte (ScriptVolltextIndex, ScriptSchlagwortIndex, ScriptAutorenIndex) in XML - Dateien umgewandelt wird.²---²> Die Erzeugung der Indices erfolgt grundsätzlich in zwei Stufen. Zunächst wird durch einen AntBuildLauf (BuildAutorenIndex, BuildSchlagwoerIndex) bzw. ein Shellscript (BuildVolltextIndex) für jeden Index eine Indexdatei ezeugt, die dann in XML - Dateien umgewandelt wird²
author:1098357660=
host:1098357660=217.230.190.190
diff:1098357711:1098357660:=6,8c6²< Die Erzeugung der Indices erfolgt grundsätzlich in zwei Stufen. ²< # Zunächst wird durch einen AntBuildLauf (BuildAutorenIndex, BuildSchlagwortIndex) bzw. ein Shellscript (BuildVolltextIndex) für jeden Index eine Indexdatei ezeugt, die dann ²< # durch Shellscripte (ScriptVolltextIndex, ScriptSchlagwortIndex, ScriptAutorenIndex) in XML - Dateien umgewandelt wird.²---²> Die Erzeugung der Indices erfolgt grundsätzlich in zwei Stufen. Zunächst wird durch einen AntBuildLauf (BuildAutorenIndex, BuildSchlagwortIndex) bzw. ein Shellscript (BuildVolltextIndex) für jeden Index eine Indexdatei ezeugt, die dann durch Shellscripte (ScriptVolltextIndex, ScriptSchlagwortIndex, ScriptAutorenIndex) in XML - Dateien umgewandelt wird.²
author:1098357711=
host:1098357711=217.230.190.190
diff:1098358008:1098357711:=7c7²< # Zunächst wird durch einen Bibb/AntBuildLauf (BuildAutorenIndex, BuildSchlagwortIndex) bzw. ein Shellscript (BuildVolltextIndex) für jeden Index eine Indexdatei ezeugt, die dann ²---²> # Zunächst wird durch einen AntBuildLauf (BuildAutorenIndex, BuildSchlagwortIndex) bzw. ein Shellscript (BuildVolltextIndex) für jeden Index eine Indexdatei ezeugt, die dann ²
author:1098358008=
host:1098358008=217.230.190.190
diff:1098360763:1098358008:=7c7²< # Zunächst wird durch einen Bibb/AntBuildLauf (BuildAutorenIndex, BuildSchlagwortIndex) aus dem bzw. ein Shellscript (BuildVolltextIndex) für jeden Index eine Indexdatei ezeugt, die dann ²---²> # Zunächst wird durch einen Bibb/AntBuildLauf (BuildAutorenIndex, BuildSchlagwortIndex) bzw. ein Shellscript (BuildVolltextIndex) für jeden Index eine Indexdatei ezeugt, die dann ²
author:1098360763=
host:1098360763=217.230.190.190
diff:1098360825:1098360763:=7c7²< # Zunächst wird durch einen Bibb/AntBuildLauf (BuildAutorenIndex, BuildSchlagwortIndex) aus dem Projects/Katalog bzw. durch ein Shellscript (BuildVolltextIndex) aus den PDF-Dateien für jeden Index eine Indexdatei ezeugt, die dann ²---²> # Zunächst wird durch einen Bibb/AntBuildLauf (BuildAutorenIndex, BuildSchlagwortIndex) aus dem bzw. ein Shellscript (BuildVolltextIndex) für jeden Index eine Indexdatei ezeugt, die dann ²
author:1098360825=
host:1098360825=217.230.190.190
diff:1098360853:1098360825:=7c7²< # Zunächst wird durch einen Bibb/AntBuildLauf (BuildAutorenIndex, BuildSchlagwortIndex) aus dem {{Projects/Katalog}} bzw. durch ein Shellscript (BuildVolltextIndex) aus den PDF-Dateien für jeden Index eine Indexdatei ezeugt, die dann ²---²> # Zunächst wird durch einen Bibb/AntBuildLauf (BuildAutorenIndex, BuildSchlagwortIndex) aus dem Projects/Katalog bzw. durch ein Shellscript (BuildVolltextIndex) aus den PDF-Dateien für jeden Index eine Indexdatei ezeugt, die dann ²
author:1098360853=
host:1098360853=217.230.190.190
diff:1102028411:1098360853:=9d8²< - Die Shellscripte können auch über Ant-Targets angesprochen werden²
author:1102028411=
host:1102028411=194.231.187.147
